# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_API]
        ROLE_SUPER_ADMIN: ROLE_ADMIN


    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:

        uneak_user:
            id: uneak.user_provider.username


    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            form_login:
                provider: uneak_user
                check_path: /oauth/v2/auth/login_check
                login_path: /oauth/v2/auth/login
#                use_referer: true
            anonymous: true

        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true
            anonymous:  true # can be omitted as its default value

        user:
#            pattern: ^/admin

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            form_login:
                provider: uneak_user
                csrf_provider: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
                login_path:  user_security_login
                check_path:  user_security_check
                default_target_path: user_profile_show
            logout:
                path: user_security_logout
                target: user_security_login


            anonymous:    true
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate







    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/connect, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }

        - { path: ^/oauth/v2/auth/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/doc, role: ROLE_ADMIN }

#        - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/api, roles: [ IS_AUTHENTICATED_ANONYMOUSLY ] }




        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }