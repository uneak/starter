imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

uneak_assets_manager:

    jquery2_js:
        type: externaljs
        build: true
        config:
            src: vendor/jquery/dist/jquery2.js
            dependencies: [ jquery_js ]

    material_design_lite_js :
        type: externaljs
        config:
            src: vendor/material-design-lite/material2.js


uneak_templates_manager:

    member_connect_login: HWIOAuthBundle:Connect:login.html.twig
    member_connect_registration_success: HWIOAuthBundle:Connect:registration_success.html.twig
    member_connect_registration: HWIOAuthBundle:Connect:registration.html.twig
    member_connect_connect_success: HWIOAuthBundle:Connect:connect_success.html.twig
    member_connect_connect_confirm: HWIOAuthBundle:Connect:connect_confirm.html.twig
    member_security_login: MemberBundle:Security:login.html.twig
    member_resetting_request: MemberBundle:Resetting:request.html.twig
    member_resetting_password_already_requested: MemberBundle:Resetting:passwordAlreadyRequested.html.twig
    member_resetting_check_email: MemberBundle:Resetting:checkEmail.html.twig
    member_resetting_reset: MemberBundle:Resetting:reset.html.twig
    member_registration_email_txt: MemberBundle:Registration:email.txt.twig
    member_registration_register: MemberBundle:Registration:register.html.twig
    member_registration_check_email: MemberBundle:Registration:checkEmail.html.twig
    member_registration_confirmed: MemberBundle:Registration:confirmed.html.twig
    member_profile_show: MemberBundle:Profile:show.html.twig
    member_profile_edit: MemberBundle:Profile:edit.html.twig
    member_changepassword_change_password: MemberBundle:ChangePassword:changePassword.html.twig

    block_card_script: UneakMaterialDesignBlocksBundle:Block:card_script.html.twig
    block_card_template: UneakMaterialDesignBlocksBundle:Block:card.html.twig





framework:
    #esi:             ~
    ide: "phpstorm://open?file=%%f&line=%%l"
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"


    orm:
        auto_generate_proxy_classes: "%kernel.debug%"

        entity_managers:
            default:
                auto_mapping: true
                mappings:

                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # this one is optional and will default to the name set for the mapping
                        is_bundle: false

stof_doctrine_extensions:
    default_locale: "%locale%"

    orm:
        default:
            tree: false
            timestampable: false
            sluggable: false
            uploadable: false




# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }



# Fos User
fos_user:
    db_driver: orm
    firewall_name: admin
    user_class: UserBundle\Entity\User
    group:
        group_class: UserBundle\Entity\Group
    registration:
        confirmation:
            enabled:    false # change to true for required email confirmation
            from_email: # Use this node only if you don't want the global email address for the confirmation email
                address: %contact_email%
                sender_name: %contact_name%
    resetting:
        token_ttl: 86400
        email:
            from_email: # Use this node only if you don't want the global email address for the resetting email
                address: %contact_email%
                sender_name: %contact_name%
        form:
            type:               fos_user_resetting
            name:               fos_user_resetting_form
            validation_groups:  [ResetPassword, Default]




# HWI Oauth
hwi_oauth:
    firewall_name: secured_area
    http_client:
        timeout:       60 # Time in seconds, after library will shutdown request, by default: 5
        verify_peer:   true # Setting allowing you to turn off SSL verification, by default: true
        ignore_errors: true # Setting allowing you to easier debug request errors, by default: true
        max_redirects: 5 # Number of HTTP redirection request after which library will shutdown request,
                         # by default: 5
    resource_owners:
        facebook:
            type:                facebook
            client_id:           %facebook_client_id%
            client_secret:       %facebook_client_secret%
            scope:               "email,public_profile,user_friends"
            infos_url:           https://graph.facebook.com/me?fields=id,first_name,last_name,email,birthday,picture.type(large)
            user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
            paths:
                identifier: id
                firstname: first_name
                lastname: last_name
                realname: ["first_name", "last_name"]
                nickname: ["first_name", "last_name"]
                email: email
                profilepicture: picture.data.url

        google:
            type:                google
            client_id:           %google_client_id%
            client_secret:       %google_client_secret%
            scope:               "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
            paths:
                identifier: id
                firstname: given_name
                lastname: family_name
                realname: name
                nickname: name
                email: email
                profilepicture: picture

        twitter:
            type:                twitter
            client_id:           %twitter_client_id%
            client_secret:       %twitter_client_secret%
#            scope:               "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
            paths:
                identifier: id
#                firstname: given_name
#                lastname: family_name
#                realname: name
                nickname: name
                email: email
                profilepicture: profile_image_url

    connect:
        confirmation: false
        account_connector: uneak.member_provider
        registration_form: uneak.member_registration.form.type
        registration_form_handler: uneak.member_registration.form.handler

#    fosub:
#        username_iterations: 30
#        properties:
#            facebook: facebook_id
#            google: google_id



# Liip Imagine
liip_imagine:
    resolvers:
        default:
            web_path:
                web_root: %kernel.root_dir%/../web
                cache_prefix: uploads/cache

    loaders:
        default:
            filesystem:
                data_root: %kernel.root_dir%/../web


    driver: gd
    cache: default
    data_loader: default
    controller:
        filter_action:  liip_imagine.controller:filterAction
        filter_runtime_action: liip_imagine.controller:filterRuntimeAction

    filter_sets:
        cache: ~

        thumbs:
            quality: 100
            filters:
                upscale: { min: [100, 100] }
                thumbnail: { size: [100, 100], mode: outbound }

        avatar:
            quality: 100
            filters:
                upscale: { min: [29, 29] }
                thumbnail: { size: [29, 29], mode: outbound }


# Bower
sp_bower:
    install_on_warmup: true
    allow_root: true
    bin: /usr/local/bin/bower
    bundles:
#        AppBundle:
#            config_dir: %kernel.root_dir%/../app/config
#            asset_dir: %kernel.root_dir%/../web/vendor
#            json_file: bower.json
#            cache: %kernel.root_dir%/cache

        UneakMaterialDesignBlocksBundle:
            config_dir: %kernel.root_dir%/../src/Uneak/MaterialDesignBlocksBundle/Resources/config
            asset_dir: %kernel.root_dir%/../web/vendor
            json_file: bower.json
            cache: %kernel.root_dir%/cache


# Vich Uploader
vich_uploader:
    db_driver: orm

    mappings:

        user_image:
            uri_prefix:         /uploads/user
            upload_destination: %kernel.root_dir%/../web/uploads/user
            namer: vich_uploader.namer_uniqid

            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
